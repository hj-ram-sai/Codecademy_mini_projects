SELECT *
FROM subscriptions
LIMIT 10;

SELECT MIN(subscription_start) AS 'earliest date', MAX(subscription_start) AS 'last date'
FROM subscriptions;

//Creating temp tables//
WITH months AS
(SELECT
'2017-01-01' AS first_day,
'2017-01-31' AS last_day
UNION
SELECT
'2017-02-01' AS first_day,
'2017-02-28' AS last_day
UNION
SELECT
'2017-03-01' AS first_day,
'2017-03-30' AS last_day
)
cross_join AS (
  SELECT *
  FROM subscriptions
  CROSS JOIN months

//Capturing status flags//
cross_join AS (
  SELECT *
  FROM subscriptions
  CROSS JOIN months
),
status AS (
SELECT id,
first_day AS month,
CASE
WHEN (subscription_start < first_day)
AND (subscription_end > first_day OR subscription_end IS NULL)AND (segment = 87) THEN 1 ELSE 0 END AS is_active_87,
CASE
WHEN (subscription_start < first_day) AND (subscription_end > first_day OR subscription_end IS NULL)AND (segment = 30) THEN 1 ELSE 0 END AS is_active_30, 
CASE
WHEN (subscription_end BETWEEN first_day AND last_day)AND (segment = 87)THEN 1 ELSE 0 END as is_canceled_87,
CASE
WHEN (subscription_end BETWEEN first_day AND last_day)AND (segment = 30)
THEN 1
ELSE 0
END as is_canceled_30
FROM cross_join),
...

//Aggregating active statuses//
status_aggregate AS (
SELECT
month,
SUM(is_active_87) AS sum_active_87,
SUM(is_active_30) AS sum_active_30,
SUM(is_canceled_87) AS sum_canceled_87,
SUM(is_canceled_30) AS sum_canceled_30
FROM status
)

//Calculating churn rates//

SELECT
month, 
1.0 * sum_canceled_87 / sum_active_87 AS 'Churn 87',
1.0 * sum_canceled_30 / sum_active_30 AS 'Churn 30'
FROM status_aggregate;
...
