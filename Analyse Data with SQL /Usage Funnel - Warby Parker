SELECT * 
FROM survey
LIMIT 5;

SELECT *
FROM quiz
LIMIT 5;

SELECT *
FROM home_try_on
LIMIT 5;

Select *
FROM purchase
LIMIT 5;

SELECT question, 
  COUNT(DISTINCT user_id) AS 'Number of responses', (COUNT (DISTINCT user_id) / total_users * 100 AS '% conversion’
FROM survey
GROUP BY 1;

SELECT model_name AS 'model', style, color, price, product_id AS 'product id', SUM(price) AS 'total revenue', COUNT(user_id) AS '# purchased'
FROM purchase
GROUP BY 5
ORDER BY 6 DESC;
// Similar flow repeated for grouping records by product style, color, etc. //

SELECT style, SUM(price) AS 'total revenue',
COUNT(user_id) AS 'Total # of purchases'
FROM purchase
GROUP BY 1;

SELECT color, SUM(price) AS 'total revenue', 
COUNT(user_id) AS 'Total # of purchases'
FROM purchase
GROUP BY 1;

SELECT model_name, SUM(price) AS 'total revenue', COUNT(user_id) AS 'Total # of purchases'
FROM purchase
GROUP BY model_name
ORDER BY 2 DESC;

SELECT user_id, SUM(price) AS 'total revenue', COUNT(user_id) AS 'Total # of purchases'
FROM purchase
GROUP BY user_id
ORDER BY 2 DESC
LIMIT 5;

SELECT quiz.style, SUM(home_try_on.user_id IS NOT NULL) AS 'total home try-on', AVG(home_try_on.number_of_pairs) AS 'average # pairs', SUM(purchase.user_id IS NOT NULL)
FROM quiz
LEFT JOIN home_try_on
ON quiz.user_id = home_try_on.user_id
LEFT JOIN purchase
ON home_try_on.user_id = purchase.user_id
GROUP BY quiz.style;


SELECT home_try_on.number_of_pairs, SUM(home_try_on.user_id IS NOT NULL) AS 'total home try-on', AVG(home_try_on.number_of_pairs) AS 'average # pairs', SUM(purchase.user_id IS NOT NULL
…
…
FROM quiz
LEFT JOIN home_try_on
ON quiz.user_id = home_try_on.user_id
LEFT JOIN purchase
ON home_try_on.user_id = purchase.user_id
GROUP BY 1;


//Repeat above but instead group by purchase.price, model_name, etc.//

SELECT home_try_on.number_of_pairs, SUM(home_try_on.user_id IS NOT NULL) AS 'total home try-on', AVG(home_try_on.number_of_pairs) AS 'average # pairs', COUNT(home_try_on.userId IS NOT NULL) AS ‘x’, COUNT(purchase.userId IS NOT NULL) AS ‘y’,  SUM(purchase.user_id IS NOT NULL), avg(x) AS avg_x, avg(y) AS avg_y
(sum( (x - avg_x) * (y - avg_y) ) * sum( (x - avg_x) * (y - avg_y) ) / nullif(sum( (x - avg_x) * (x - avg_x) ) * sum( (y - avg_y) * (y - avg_y)), 0) as r_square, 
avg((review_count - avg_x)*(review_count - avg_x)) as var_x, 
avg((fans - avg_y)*(fans - avg_y)) as var_y

FROM quiz
LEFT JOIN home_try_on
ON quiz.user_id = home_try_on.user_id
LEFT JOIN purchase
ON home_try_on.user_id = purchase.user_id
GROUP BY 1;
