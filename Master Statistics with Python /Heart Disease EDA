import pandas as pd
import numpy as np
import matplotlib.pyplot as plt 
import seaborn as sns

heart = pd.read_csv('heart_disease.csv')

heart.head()
heart.groupby('heart_disease').mean()
heart.groupby('heart_disease').median()

sns.boxplot(x=heart.heart_disease, y=heart.thalach)
plt.show()

thalach_hd = heart.thalach[heart.heart_disease == 'presence']
thalach_no_hd = heart.thalach[heart.heart_disease == 'absence']
from scipy.stats import ttest_ind
tstat, pval = ttest_ind(thalach_hd, thalach_no_hd)
print('p-value for `thalach` two-sample t-test: ', pval)

sns.boxplot(x=heart.heart_disease, y=heart.age)
plt.show()

age_hd = heart.age[heart.heart_disease == 'presence']
age_no_hd = heart.age[heart.heart_disease == 'absence']
tstat, pval = ttest_ind(age_hd, age_no_hd)
print('p-value for `age` two-sample t-test: ', pval)

sns.boxplot(x=heart.heart_disease, y=heart.trestbps)
plt.show()

trestbps_hd = heart.trestbps[heart.heart_disease == 'presence']
trestbps_no_hd = heart.trestbps[heart.heart_disease == 'absence']
tstat, pval = ttest_ind(trestbps_hd, trestbps_no_hd)
print('p-value for `trestbps` two-sample t-test: ', pval)

sns.boxplot(x=heart.heart_disease, y=heart.chol)
plt.show()

chol_hd = heart.chol[heart.heart_disease == 'presence']
chol_no_hd = heart.chol[heart.heart_disease == 'absence']
tstat, pval = ttest_ind(chol_hd, chol_no_hd)
print('p-value for `chol` two-sample t-test: ', pval)

thalach_typical = heart.thalach[heart.cp == 'typical angina']
thalach_asymptom = heart.thalach[heart.cp == 'asymptomatic']
thalach_nonangin = heart.thalach[heart.cp == 'non-anginal pain']
thalach_atypical = heart.thalach[heart.cp == 'atypical angina']

from scipy.stats import f_oneway
Fstat, pval = f_oneway(thalach_typical, thalach_asymptom, thalach_nonangin, thalach_atypical)
print('p-value for ANOVA: ', pval)

from statsmodels.stats.multicomp import pairwise_tukeyhsd
output = pairwise_tukeyhsd(heart.thalach, heart.cp)
print(output)

Xtab = pd.crosstab(heart.cp, heart.heart_disease)
print(Xtab)

from scipy.stats import chi2_contingency
chi2, pval, dof, exp = chi2_contingency(Xtab)
print('p-value for chi-square test: ', pval)

# 2-sample t-test

# using a scipy function
trestbps_hd = heart.trestbps[heart.heart_disease == 'presence']
trestbps_no_hd = heart.trestbps[heart.heart_disease == 'absence']
tstat, pval = ttest_ind(trestbps_hd, trestbps_no_hd)
print('scipy p-value for `trestbps` two-sample t-test: ', pval)

# using simulation
null_mean_diffs = []
for i in range(1000):
    scrambled = np.random.choice(heart.heart_disease, size = len(heart), replace = False)
    trestbps_hd_sim = heart.trestbps[scrambled == 'presence']
    trestbps_no_hd_sim = heart.trestbps[scrambled == 'absence']
    sim_mean_diff = np.mean(trestbps_hd_sim) - np.mean(trestbps_no_hd_sim)
    null_mean_diffs.append(sim_mean_diff)

# calculate p-value
observed_mean_diff = np.mean(trestbps_hd) - np.mean(trestbps_no_hd)
pval_sim = np.sum(np.array(null_mean_diffs) > observed_mean_diff)/1000 * 2
print('simulated p-value for `trestbps` two-sample t-test: ', pval_sim)

plt.hist(null_mean_diffs)
plt.axvline(x = observed_mean_diff, color = 'red')
plt.show()

# chi-sq test with scipy
Xtab = pd.crosstab(heart.cp, heart.heart_disease)
from scipy.stats import chi2_contingency
chi2, pval, dof, exp = chi2_contingency(Xtab)
print('scipy p-value for chi-square test: ', pval)

prob_cp = heart.cp.value_counts(normalize=True).sort_index()
prob_cp

prob_hd = heart.heart_disease.value_counts(normalize=True)
prob_hd

ztab = pd.crosstab(heart.heart_disease,heart.cp)
from scipy.stats import chi2_contingency
chi2, pval, dof, exp = chi2_contingency(ztab)
print(exp)
print(chi2)

observed = pd.crosstab(heart.heart_disease,heart.cp)
expected = np.array([probs_hd[0] * probs_cp, probs_hd[1] * probs_cp])*len(heart)
print(expected)
obs_chi2 = ((observed-expected)**2/expected).sum().sum()
print(obs_chi2)

null_chisqs = []
expected = np.array([probs_hd[0] * probs_cp, probs_hd[1] * probs_cp])*len(heart)

for i in range(1000):
    scrambled_hd = np.random.choice(heart.heart_disease, size = len(heart), replace = False)
    scrambled_cp = np.random.choice(heart.cp, size = len(heart), replace = False)
    sim_observed = pd.crosstab(scrambled_hd,scrambled_cp)
    sim_chisq = ((sim_observed-expected)**2/expected).sum().sum()
    null_chisqs.append(sim_chisq)

plt.hist(null_chisqs)
plt.axvline(x = obs_chi2, color = 'red')
plt.show()





